const express = require('express');
const cors = require('cors');
const { MongoClient } = require('mongodb');

const app = express();
app.use(cors());
app.use(express.json());

const uri = 'mongodb://mongo:27017';
const client = new MongoClient(uri);
let db;

client.connect().then(() => {
  db = client.db('vedicmatch');
  console.log('✅ MongoDB connected');
}).catch((err) => {
  console.error('❌ Mongo connection failed:', err);
});

app.post('/api/v1/login', async (req, res) => {
  const { mobile } = req.body;
  if (!mobile) return res.status(400).json({ error: 'Mobile number required' });

  try {
    if (!db) return res.status(503).json({ error: 'MongoDB not connected yet' });
    const user = await db.collection('users').findOne({ mobile: String(mobile) });
    if (!user) return res.status(404).json({ error: 'User not found' });
    res.json({ message: 'Login successful', user });
  } catch (err) {
    console.error('❌ Login error:', err);
    res.status(500).json({ error: 'Login failed' });
  }
});

app.post('/api/v1/users', async (req, res) => {
  try {
    if (!db) return res.status(503).json({ error: 'MongoDB not connected yet' });
    const { name, email, mobile } = req.body;
    const result = await db.collection('users').insertOne({ name, email, mobile: String(mobile) });
    res.status(201).json({ insertedId: result.insertedId });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: 'Insert failed' });
  }
});

app.get('/api/v1/health', (_, res) => {
  res.json({ status: 'ok' });
});

app.listen(3000, '0.0.0.0', () => {
  console.log('🚀 API Gateway running on port 3000');
});
