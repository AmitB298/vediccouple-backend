const bcrypt = require('bcrypt');const jwt = require('jsonwebtoken');const User = require('../models/User');exports.register = async (req, res) => {  try {    const { name, email, password, phone, isPremium } = req.body;    const hashed = await bcrypt.hash(password, 12);    const user = new User({ name, email, password: hashed, phone, isPremium });    await user.save();    const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, { expiresIn: '1h' });    res.json({ success: true, token });  } catch (err) {    res.status(500).json({ success: false, message: err.message });  }};exports.login = async (req, res) => {  try {    const { email, password } = req.body;    const user = await User.findOne({ email });    if (!user) return res.status(400).json({ message: 'User not found' });    const match = await bcrypt.compare(password, user.password);    if (!match) return res.status(400).json({ message: 'Invalid credentials' });    const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, { expiresIn: '1h' });    res.json({ success: true, token });  } catch (err) {    res.status(500).json({ success: false, message: err.message });  }};
